<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Play &amp; Go</title>
  
  <subtitle>苟利国家生死以 岂因祸福趋避之</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://newbilityvery.github.io/"/>
  <updated>2023-02-04T06:33:42.379Z</updated>
  <id>http://newbilityvery.github.io/</id>
  
  <author>
    <name>Vivid</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2023 读书 - 《白夜行》</title>
    <link href="http://newbilityvery.github.io/2023/02/03/bai-ye-xing/"/>
    <id>http://newbilityvery.github.io/2023/02/03/bai-ye-xing/</id>
    <published>2023-02-04T06:09:07.000Z</published>
    <updated>2023-02-04T06:33:42.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023年读的第一本书"><a href="#2023年读的第一本书" class="headerlink" title="2023年读的第一本书"></a>2023年读的第一本书</h1><p>其实很久没怎么认真看一本书了。2022年底开始，利用中午吃饭时读书。今年看的第一本书是《白夜行》。其实很早就听说东野圭吾了，之前也尝试看。可是不知怎么的总是看不进去，每次都止步于第一章开头。感觉就是本普通的推理小说。</p><p>这次是花了三个午饭的时间看到了第三章，慢慢感觉这写的跟一般的推理小说不一样。等看到第六章时，就没法只满足午饭时间看了。花了一晚上加上白天小摸了一会儿鱼，把剩下的全部看完了。</p><p>看完后久久不能平静。准备再找些作者其他的书来看看。</p><p><img src="https://raw.githubusercontent.com/newbilityvery/blog_img/blog_image/blog/img/baiyexing.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2023年读的第一本书&quot;&gt;&lt;a href=&quot;#2023年读的第一本书&quot; class=&quot;headerlink&quot; title=&quot;2023年读的第一本书&quot;&gt;&lt;/a&gt;2023年读的第一本书&lt;/h1&gt;&lt;p&gt;其实很久没怎么认真看一本书了。2022年底开始，利用中午吃饭时读书。
      
    
    </summary>
    
    
      <category term="读书" scheme="http://newbilityvery.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>新主题</title>
    <link href="http://newbilityvery.github.io/2021/11/24/new-theme/"/>
    <id>http://newbilityvery.github.io/2021/11/24/new-theme/</id>
    <published>2021-11-24T11:33:39.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<p>心血来潮找出了之前的repo。升级hexo再换了个主题。</p><p>其实挺喜欢原来那个主题的，可惜许久不更新了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;心血来潮找出了之前的repo。升级hexo再换了个主题。&lt;/p&gt;
&lt;p&gt;其实挺喜欢原来那个主题的，可惜许久不更新了。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Misc" scheme="http://newbilityvery.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>Switch from vim-airline to lightline</title>
    <link href="http://newbilityvery.github.io/2017/08/04/switch-to-lightline/"/>
    <id>http://newbilityvery.github.io/2017/08/04/switch-to-lightline/</id>
    <published>2017-08-04T10:23:11.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reason"><a href="#Reason" class="headerlink" title="Reason"></a>Reason</h1><p><a href="https://github.com/vim-airline/vim-airline">vim-airline</a> is an excellent vim plugin which gives you a fancy status line and makes the coding not that boring. However, recently I found it slowing down the vim start-up time.</p><p>I haven’t had this issue before, now it took at least 2 seconds to start the a vim session. I guess one reason may be the <code>/home</code> directory is NFS-mounted and recently more people are using it.</p><p>I suspect the vim-airline plugin because vim is freezing for 1s before airline status bar shows up. Then I disable the plugin, vim starts up in almost no time. It might be too heavy.</p><h1 id="Switch-to-lightline"><a href="#Switch-to-lightline" class="headerlink" title="Switch to lightline"></a>Switch to <a href="https://github.com/itchyny/lightline.vim">lightline</a></h1><p>However, I really like the fancy status bar. After searching, I find a very nice alternative - <a href="https://github.com/itchyny/lightline.vim">lightline</a>.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Installation is very simple if you have a plugin manager like <strong>vundle</strong> or <strong>vim-plug</strong>. (BTW, I am using vim-plug now.) Just comment out the old and add the new plugin.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; Comment the Old</span></span><br><span class="line"><span class="comment">&quot; Plug &#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="comment">&quot; Plug &#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line"><span class="comment">&quot; Add new plugin</span></span><br><span class="line">Plug <span class="string">&#x27;itchyny/lightline.vim&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>Actually the default setting is good enough. I just did some simple Configuration.</p><ul><li>Change color scheme</li><li>Show git branch info (need <a href="https://github.com/tpope/vim-fugitive">vim-fugtive</a> plugin)</li><li>Use powerline symbols</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">g:lightline</span> = &#123;</span><br><span class="line">  \   <span class="string">&#x27;colorscheme&#x27;</span>: <span class="string">&#x27;Dracula&#x27;</span>,</span><br><span class="line">  \   <span class="string">&#x27;active&#x27;</span>: &#123;</span><br><span class="line">  \     <span class="string">&#x27;left&#x27;</span>:[ [ <span class="string">&#x27;mode&#x27;</span>, <span class="string">&#x27;paste&#x27;</span> ],</span><br><span class="line">  \              [ <span class="string">&#x27;gitbranch&#x27;</span>, <span class="string">&#x27;readonly&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>, <span class="string">&#x27;modified&#x27;</span> ]</span><br><span class="line">  \     ]</span><br><span class="line">  \   &#125;,</span><br><span class="line">\   <span class="string">&#x27;component&#x27;</span>: &#123;</span><br><span class="line">\     <span class="string">&#x27;lineinfo&#x27;</span>: <span class="string">&#x27; %3l:%-2v&#x27;</span>,</span><br><span class="line">\   &#125;,</span><br><span class="line">  \   <span class="string">&#x27;component_function&#x27;</span>: &#123;</span><br><span class="line">  \     <span class="string">&#x27;gitbranch&#x27;</span>: <span class="string">&#x27;fugitive#head&#x27;</span>,</span><br><span class="line">  \   &#125;</span><br><span class="line">  \ &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:lightline</span>.separator = &#123;</span><br><span class="line">\   <span class="string">&#x27;left&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;right&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  \&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:lightline</span>.subseparator = &#123;</span><br><span class="line">\   <span class="string">&#x27;left&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;right&#x27;</span>: <span class="string">&#x27;&#x27;</span> </span><br><span class="line">  \&#125;</span><br></pre></td></tr></table></figure><ul><li>Show tabline and disable the GUI tabline</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">g:lightline</span>.tabline = &#123;</span><br><span class="line">  \   <span class="string">&#x27;left&#x27;</span>: [ [<span class="string">&#x27;tabs&#x27;</span>] ],</span><br><span class="line">  \   <span class="string">&#x27;right&#x27;</span>: [ [<span class="string">&#x27;close&#x27;</span>] ]</span><br><span class="line">  \ &#125;</span><br><span class="line"><span class="keyword">set</span> showtabline=<span class="number">2</span>  <span class="comment">&quot; Show tabline</span></span><br><span class="line"><span class="keyword">set</span> guioptions-=<span class="keyword">e</span>  <span class="comment">&quot; Don&#x27;t use GUI tabline</span></span><br></pre></td></tr></table></figure><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>I managed to show buffers on tabline, but it is too long when you open many files. Then I use <a href="https://github.com/bling/vim-bufferline">vim-bufferline</a> plugin instead.</p><h1 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h1><p><img src="/" alt="Final Result"></p><p>Vim start-up time is very fast now and I still have a fancy status bar. I am happy with it ^_^.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reason&quot;&gt;&lt;a href=&quot;#Reason&quot; class=&quot;headerlink&quot; title=&quot;Reason&quot;&gt;&lt;/a&gt;Reason&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/vim-airline/vim-airline&quot;&gt;v
      
    
    </summary>
    
    
      <category term="English" scheme="http://newbilityvery.github.io/tags/English/"/>
    
      <category term="Vim" scheme="http://newbilityvery.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>在Galaxy Tab S 8.4 上刷AOSP android N</title>
    <link href="http://newbilityvery.github.io/2016/11/03/install-android-N-on-galaxy-tab-A/"/>
    <id>http://newbilityvery.github.io/2016/11/03/install-android-N-on-galaxy-tab-A/</id>
    <published>2016-11-03T11:54:55.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>去年买了台Galaxy Tab S 8.4想用来看小说。结果用得很少，因为没时间。T_T 不过没事的时候还是会拿来玩玩。然而三星的系统让我实在恼火：</p><span id="more"></span><ul><li>自带一堆没用的应用占空间。虽然插了个64G的卡，可是应用没法往里面装。尤其是游戏，数据文件貌似没法转到卡上。</li><li>还有个更重要的原因是超级耗电。我还是root过装了绿色守护，结果待机也只能一天。没精力去研究原因了。</li></ul><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>过程挺有意思的，心血来潮在XDA上逛发现可以刷AOSP的系统。正是我想要的啊！看了看要求，需要有TWRP recovery。这个还真有。。。不知道什么时候弄上去的。估计是刚买回来折腾的时候。</p><p>那还等什么？开搞！</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>如果已经有TWRP的recovery了就很容易，（我已经忘了我是怎么装上去的了。。。）直接下载好zip包然后在recovery里面install即可。</p><ul><li><p>Android 6.0 <a href="http://forum.xda-developers.com/galaxy-tab-s/development/rom-android-6-marshmallow-tab-s-10-5-lte-t3219759">http://forum.xda-developers.com/galaxy-tab-s/development/rom-android-6-marshmallow-tab-s-10-5-lte-t3219759</a></p></li><li><p>Android 7.0 <a href="http://forum.xda-developers.com/galaxy-tab-s/development/rom-android-7-nougat-t3449078">http://forum.xda-developers.com/galaxy-tab-s/development/rom-android-7-nougat-t3449078</a></p></li></ul><p><strong>前提</strong></p><p>已经有了TWRP 2.8.6.2或以上版本。<br>打过bootloader补丁。已经是官方5.0以上的话已经打好了。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>下载对应版本的AOSP系统，GApps 还有superSU.</li><li>进twrp，先清分区。SD卡和internal SD可以不用请。</li><li>安装AOSP zip, 然后重启至recovery.</li><li>安装Gapps和superSU.</li><li>重启系统.</li><li>就这么简单！</li></ol><h2 id="Android-6-0"><a href="#Android-6-0" class="headerlink" title="Android 6.0"></a>Android 6.0</h2><p>我先考虑的是装6.0，因为稳定而且有xposed。然而装完发现GApps装上去后一直退出。试了好几个版本都不行。煎熬了一天然后第二天果断换N。</p><h2 id="Android-N"><a href="#Android-N" class="headerlink" title="Android N"></a>Android N</h2><p>这个安装很顺利，照着步骤就行。有个小坑，不知道是不是我的特例。我在初始设定时跳过了指纹设置，然后在系统设置里就没法打开了。只好再刷了一次直接在开始时设定就没问题了。</p><h1 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h1><ul><li>爽！还是喜欢原生。装好后系统才占2G。</li></ul><p><img src="http://ww4.sinaimg.cn/large/0060lm7Tgw1f9ep9ih4y9j318g1z441n.jpg" alt="系统占用"></p><ul><li>待机也是飞起，这还是没装xposed呢，要等出了还不得飞上天啊。</li></ul><p><img src="http://ww1.sinaimg.cn/large/0060lm7Tgw1f9ep9jxl6cj318g1z4gpo.jpg" alt="电池使用"></p><ul><li>从6开始有个很不错的功能：在系统层面直接把SD卡变成系统内部空间。这样应用就能直接装在卡上啦！</li></ul><h2 id="几点不足"><a href="#几点不足" class="headerlink" title="几点不足"></a>几点不足</h2><ol><li>有些程序不稳定。比如指纹开锁有时就不灵。系统应用有时会崩溃。</li><li>画面有时候有glitch，作者也在帖子里说明了。</li><li>没Xposed。耐心等着吧。</li></ol><p>不过这些都是小问题，因为我用得并不多。也很少遇到。</p><h2 id="Some-Pictures"><a href="#Some-Pictures" class="headerlink" title="Some Pictures"></a>Some Pictures</h2><p><img src="http://ww1.sinaimg.cn/large/0060lm7Tgw1f9ep9kgixzj318g1z4q7n.jpg" alt="系统信息"></p><p><img src="http://ww4.sinaimg.cn/large/0060lm7Tgw1f9epaegruij318g1z4ams.jpg" alt="N Logo"></p><p><img src="http://ww4.sinaimg.cn/large/0060lm7Tgw1f9epaj5b44j31kw23u4qp.jpg" alt="平板照片"></p><!-- 图片链接放下面 -->]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h1&gt;&lt;p&gt;去年买了台Galaxy Tab S 8.4想用来看小说。结果用得很少，因为没时间。T_T 不过没事的时候还是会拿来玩玩。然而三星的系统让我实在恼火：&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷机" scheme="http://newbilityvery.github.io/tags/%E5%88%B7%E6%9C%BA/"/>
    
      <category term="Misc" scheme="http://newbilityvery.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>My Vim Setting for verilog/systemverilog coding</title>
    <link href="http://newbilityvery.github.io/2016/07/08/vim-env-for-rtl-coding/"/>
    <id>http://newbilityvery.github.io/2016/07/08/vim-env-for-rtl-coding/</id>
    <published>2016-07-09T02:07:38.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<!--original: truecatagory:--><h1 id="Backgroud"><a href="#Backgroud" class="headerlink" title="Backgroud"></a>Backgroud</h1><p>I started using Vim after I started working in the first company, because the platform was linux and we were not allowed to install any software. Actually it is not bad, I improved my Linux skill a lot on this limited platform.</p><span id="more"></span><p>I had tried to learn to use Vim before, but it was hard for me to remember the key and to switch between these modes. The platform forced me to use it and I started with using only basic operations like <code>i</code>, <code>Esc</code>, <code>:w</code> and so on. After figuring out the rule, it was easier and easier to learn new operations.</p><!--Now I cannot leave vim to edit a file. Every time I start using an IDE for some reason, the first thing is looking for its vim plugin. --><p>Most of the time, I am coding in verilog. It doesn’t like other software languages which have plenty of excellent tools&#x2F;IDE, free or not free, to use. Even the EDA tools that cost millions of dollors a year, the edit function of them is still bad. (Maybe they were not designed as an code editors.)</p><p>However, after 4 years tweaking, I think I have a relatively handy environment to code in verilog, at least for myself.</p><h1 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h1><h2 id="Emacs-verilog-mode"><a href="#Emacs-verilog-mode" class="headerlink" title="Emacs verilog mode"></a>Emacs verilog mode</h2><p>Yes, it is Emacs. I don’t know how to use Emacs but its verilog-mode is amazing! It saves my life in top-level module connection and many tedious signal name typing. Check <a href="http://www.veripool.org/wiki/verilog-mode">here</a> if you are not familar with it.</p><p>Even we can use the <code>*</code> in systemverilog, I still prefer the traditional way. Because it is easier to debug on the source code when signals are given explicitly.</p><p>Although it is an Emacs function, we can call it using <code>emacs --batch &#123;filenames...&#125; -f verilog-batch-auto</code>; and there is also a <a href="http://www.vim.org/scripts/script.php?script_id=1875">plugin</a> to run it directly in Vim.</p><p>Some example:</p><ul><li><strong>Argument lists</strong></li></ul><p>Before:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> mod0(<span class="comment">/*autoarg*/</span>);</span><br><span class="line">  <span class="keyword">input</span> a;</span><br><span class="line">  <span class="keyword">input</span> b;</span><br><span class="line">  <span class="keyword">output</span> c;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>After processed by verilog-mode:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> mod0(<span class="comment">/*autoarg*/</span></span><br><span class="line">   <span class="comment">// Outputs</span></span><br><span class="line">   c,</span><br><span class="line">   <span class="comment">// Inputs</span></span><br><span class="line">   a, b</span><br><span class="line">   );</span><br><span class="line">  <span class="keyword">input</span> a;</span><br><span class="line">  <span class="keyword">input</span> b;</span><br><span class="line">  <span class="keyword">output</span> c;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li><strong>Instantiations</strong><br>Before:</li></ul><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mod0.v</span></span><br><span class="line"><span class="keyword">module</span> mod0 (i_0, o_0);</span><br><span class="line">  <span class="keyword">input</span> i_0;</span><br><span class="line">  <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>] o_0;</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// top0.v</span></span><br><span class="line"><span class="keyword">module</span> top0 (<span class="comment">/*autoarg*/</span>);</span><br><span class="line">  <span class="comment">/*autoinput*/</span></span><br><span class="line">  <span class="comment">/*autooutput*/</span></span><br><span class="line"></span><br><span class="line">  mod0 u_mod0 (<span class="comment">/*autoinst*/</span>);</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>top0.v</code> after processed by verilog-mode:</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// top0.v</span></span><br><span class="line"><span class="keyword">module</span> top0 (<span class="comment">/*autoarg*/</span></span><br><span class="line">   <span class="comment">// Outputs</span></span><br><span class="line">   o_0,</span><br><span class="line">   <span class="comment">// Inputs</span></span><br><span class="line">   i_0</span><br><span class="line">   );</span><br><span class="line">  <span class="comment">/*autoinput*/</span></span><br><span class="line">  <span class="comment">// Beginning of automatic inputs (from unused autoinst inputs)</span></span><br><span class="line">  <span class="keyword">input</span>                 i_0;                    <span class="comment">// To u_mod0 of mod0.v</span></span><br><span class="line">  <span class="comment">// End of automatics</span></span><br><span class="line">  <span class="comment">/*autooutput*/</span></span><br><span class="line">  <span class="comment">// Beginning of automatic outputs (from unused autoinst outputs)</span></span><br><span class="line">  <span class="keyword">output</span> [<span class="number">31</span>:<span class="number">0</span>]         o_0;                    <span class="comment">// From u_mod0 of mod0.v</span></span><br><span class="line">  <span class="comment">// End of automatics</span></span><br><span class="line"></span><br><span class="line">  mod0 u_mod0 (<span class="comment">/*autoinst*/</span></span><br><span class="line">               <span class="comment">// Outputs</span></span><br><span class="line">               <span class="variable">.o_0</span>                     (o_0[<span class="number">31</span>:<span class="number">0</span>]),</span><br><span class="line">               <span class="comment">// Inputs</span></span><br><span class="line">               <span class="variable">.i_0</span>                     (i_0));</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>Check <a href="http://www.veripool.org/projects/verilog-mode/wiki/Verilog-mode_veritedium">here</a> for more features:</p><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>The vim in my company is an old one(7.3), I managed to compile the latest one in my home dir. Therefore I can use the new features such as relative line number and install more new plugins without compatibility issue. (I learnt compiling code here; previously I only know <code>apt-get</code>.)</p><h2 id="Vim-Plugins"><a href="#Vim-Plugins" class="headerlink" title="Vim Plugins"></a>Vim Plugins</h2><p>These are the plugins which are useful in verilog coding.</p><ul><li><a href="https://github.com/VundleVim/Vundle.vim"><strong>Vundle</strong></a></li></ul><p><a href="https://github.com/VundleVim/Vundle.vim">Vundle</a> is a plugin manager for vim. Just put the github repo in your <code>.vimrc</code> to install and manage them.</p><p>Example:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; Use the name directly from http://vim-scripts.org/vim/scripts.html</span></span><br><span class="line">Plugin <span class="string">&#x27;vividchalk.vim&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Plugin from Github repo</span></span><br><span class="line">Plugin <span class="string">&#x27;tomasr/molokai&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The all plugins mentioned below can be install like this.</p><hr><ul><li><p><a href="http://www.vim.org/scripts/script.php?script_id=1875"><strong>verilog_emacsauto.vim</strong></a><br>By using this <a href="http://www.vim.org/scripts/script.php?script_id=1875">plugin</a>, use <code>\a</code> to expands all the verilog-mode autos(<code>C-c C-a</code> in emacs) and use <code>\d</code> to delete the autos(<code>C-c C-d</code> in emacs);</p></li><li><p><a href="https://github.com/vim-airline/vim-airline"><strong>vim-airline</strong></a></p></li></ul><p><code>vim-airline</code> provides a fancy status line for vim. I switched to this after vim-powerline going to maintenance mode.</p><ul><li><a href="https://github.com/luochen1990/rainbow"><strong>rainbow</strong></a></li></ul><p>This plugin can give different colors for different levels of parentheses, which helps to read complex code much easier.</p><ul><li><a href="https://github.com/Yggdroot/indentLine"><strong>indentLine</strong></a></li></ul><p>This plugin can show vertical lines at each indent level.</p><ul><li><a href="https://github.com/cazador481/vim-systemverilog"><strong>vim-systemverilog</strong></a></li></ul><p>Gives code highlighting and some other features for systemverilog.</p><ul><li><a href="https://github.com/godlygeek/tabular"><strong>tabular</strong></a></li></ul><p>Helps to align the code. For example:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_0 = <span class="number">1</span>;</span><br><span class="line">long_var_0 = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>after applying <code>:Tabularize /=</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_0      = <span class="number">1</span>;</span><br><span class="line">long_var_0 = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>And:<br>  <a href="http://vimcasts.org/episodes/aligning-text-with-tabular-vim/">Aligning Text with Tabular.vim</a></p><p>For more details please check its github page.</p><ul><li><a href="https://github.com/vim-scripts/VisIncr"><strong>VisIncr</strong></a></li></ul><p>Easier to make a column of increasing or decreasing numbers, dates, or daynames.</p><ul><li><p><a href="https://github.com/ervandew/supertab"><strong>supertab</strong></a></p><p>It allows you to use <Tab> for all your insert completion needs</p></li></ul><!--* **incsearch**--><h2 id="other-thoughts"><a href="#other-thoughts" class="headerlink" title="other thoughts"></a>other thoughts</h2><p>There are some things that I would like to give a try if I have time.</p><ul><li>cscope</li><li>snippet</li><li>…</li></ul><!-- links -->]]></content>
    
    <summary type="html">
    
      &lt;!--
original: true
catagory:
--&gt;

&lt;h1 id=&quot;Backgroud&quot;&gt;&lt;a href=&quot;#Backgroud&quot; class=&quot;headerlink&quot; title=&quot;Backgroud&quot;&gt;&lt;/a&gt;Backgroud&lt;/h1&gt;&lt;p&gt;I started using Vim after I started working in the first company, because the platform was linux and we were not allowed to install any software. Actually it is not bad, I improved my Linux skill a lot on this limited platform.&lt;/p&gt;
    
    </summary>
    
    
      <category term="English" scheme="http://newbilityvery.github.io/tags/English/"/>
    
      <category term="Vim" scheme="http://newbilityvery.github.io/tags/Vim/"/>
    
      <category term="verilog" scheme="http://newbilityvery.github.io/tags/verilog/"/>
    
  </entry>
  
  <entry>
    <title>NAS系统及软件安装</title>
    <link href="http://newbilityvery.github.io/2016/07/07/nas-sys-install/"/>
    <id>http://newbilityvery.github.io/2016/07/07/nas-sys-install/</id>
    <published>2016-07-08T04:57:02.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>没啥准备的，就是一个U盘用来安装OMV。还有就是相关文件。</p><span id="more"></span><h2 id="相关下载"><a href="#相关下载" class="headerlink" title="相关下载"></a>相关下载</h2><ol><li><p>OMV <a href="http://www.openmediavault.org/">http://www.openmediavault.org/</a><br>官网下载。</p></li><li><p>黑群晖 <a href="http://xpenology.me/downloads/">http://xpenology.me/downloads/</a><br>我下载了<strong>DSM 5.2-5644 DS3615xs</strong>和相应的引导盘iso<strong>XPEnoboot 5.2-5644.5 DS3615xs</strong>。</p></li><li><p>unetbootin <a href="https://unetbootin.github.io/">https://unetbootin.github.io</a><br>用来制作OMV引导安装U盘。</p></li></ol><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>总的来说很简单，按照提示操作即可。</p><h2 id="安装OMV"><a href="#安装OMV" class="headerlink" title="安装OMV"></a>安装OMV</h2><p>U盘引导后按提示操作。参考了下面一些站点：</p><ol><li><a href="http://post.smzdm.com/p/277302/">http://post.smzdm.com/p/277302/</a> </li><li><a href="http://songming.me/">http://songming.me/</a></li></ol><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>装好后设置虚拟机插件的时候遇到了个问题，没法创建共享文件夹！仔细研究发现原来OMV不能在系统分区创建共享文件夹。脑子一抽用mint linux的live U盘引导然后用gparted调整了分区。重点是没想清楚，给OMV的&#x2F;分区留了100G。过了一两天才反应过来：什么都不能放还留那么大干啥？不过还好没插数据盘，到时候再重新装吧。我看留个10G都嫌多。</p><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>由于还没放数据盘，先只是装了插件。简单设置了下。</p><h2 id="新建共享文件夹"><a href="#新建共享文件夹" class="headerlink" title="新建共享文件夹"></a>新建共享文件夹</h2><p>由于系统分区不能建立共享文件夹，记得多分一个区。参考<a href="http://songming.me/shared-folders.html">这篇文章</a>：</p><h2 id="安装OMV插件"><a href="#安装OMV插件" class="headerlink" title="安装OMV插件"></a>安装OMV插件</h2><p>先装第三方插件源OMV-Extras.org。然后激活Docker和virtualbox。最后在Plugin里面找到相应插件直接安装。<br>参考：</p><ol><li><a href="http://songming.me/virtualbox.html">http://songming.me/virtualbox.html</a></li></ol><h2 id="虚拟机安装群晖"><a href="#虚拟机安装群晖" class="headerlink" title="虚拟机安装群晖"></a>虚拟机安装群晖</h2><p>过程同样也是参考网上的文章，比如：</p><ol><li><a href="http://www.nasyun.com/forum.php?mod=viewthread&tid=25075">http://www.nasyun.com/forum.php?mod=viewthread&amp;tid=25075</a></li><li><a href="http://www.360doc.com/content/15/0204/18/365619_446270627.shtml">http://www.360doc.com/content/15/0204/18/365619_446270627.shtml</a></li></ol><h1 id="群晖的简单设置"><a href="#群晖的简单设置" class="headerlink" title="群晖的简单设置"></a>群晖的简单设置</h1><p>由于目前只要Photo Station, 进去后就干了下面的事情。</p><h2 id="新建储存空间"><a href="#新建储存空间" class="headerlink" title="新建储存空间"></a>新建储存空间</h2><p>先建立储存空间，DSM可以使用系统分区所在的盘。（据说会在每个盘上都放上系统。）</p><h2 id="NFS-挂载"><a href="#NFS-挂载" class="headerlink" title="NFS 挂载"></a>NFS 挂载</h2><p>先挂载已有的WD my book live duo的NFS试试。</p><p>开始也是根据一些文章（<a href="http://blog.bbzhh.com/index.php/archives/110.html">比如这个</a>）直接改了&#x2F;etc&#x2F;rc。后面又看了<a href="http://www.cjqbz.com/2959.html">一篇文章</a>发现其实可以在webGUI添加用户脚本。感觉还是后者安全些。</p><p>当然前面的文章提到了用户脚本方案可能导致Video Station功能不正常。不过目前还没这个需求，遇到问题再说吧。</p><!-- Links --><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>直接在插件中心安装了Photo Station。把原来的photo文件夹挂在APP默认的photo文件夹下。过了一会儿就能在WebGUI看到开始索引照片了，CPU使用率瞬间蹦到100%。</p><p>如果没有自动开始索引，也可以去Photo Station设置里手动强制重新索引。</p><h1 id="关于黑裙洗白"><a href="#关于黑裙洗白" class="headerlink" title="关于黑裙洗白"></a>关于黑裙洗白</h1><p>开始是动过洗白的念头的，因为虚拟机修改MAC地址简直太容易了，后面想想还是放弃了。虽然黑裙存在的一个理由据说是用了开源的代码但本身却不开源，但是白裙毕竟也是需要厂商的服务器资源的支持。自己暂时也没有其他外网需求，只是想在家庭局域网里方便地看看照片罢了。不过其实自己这么做也就是让自己不要有太多负罪感而已。</p><h1 id="后续计划"><a href="#后续计划" class="headerlink" title="后续计划"></a>后续计划</h1><p>之前这些就算是预先的试验了。准备在插数据盘之前再重新装一遍。</p><ol><li>记得再分区时不用留那么多给系统。</li><li>群晖挂载NFS用WebGUI的用户脚本功能。</li></ol><h2 id="Docker插件"><a href="#Docker插件" class="headerlink" title="Docker插件"></a>Docker插件</h2><p>OMV和DSM里面都有Docker插件。试过DSM的，易用性很好。OMV的貌似有点复杂。先研究下看看能否搞定，毕竟虚拟机里面感觉性能有损失。实在搞不定也只好用DSM里面的了，参考资料比较多。</p><p>计划用来弄<strong>aria2</strong>和<strong>远程迅雷</strong>。</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><p>基本能想到的就是这些了。后面想到什么再另外发文补充吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;p&gt;没啥准备的，就是一个U盘用来安装OMV。还有就是相关文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="NAS" scheme="http://newbilityvery.github.io/tags/NAS/"/>
    
      <category term="OMV" scheme="http://newbilityvery.github.io/tags/OMV/"/>
    
      <category term="OpenMediaVault" scheme="http://newbilityvery.github.io/tags/OpenMediaVault/"/>
    
      <category term="群晖" scheme="http://newbilityvery.github.io/tags/%E7%BE%A4%E6%99%96/"/>
    
      <category term="DSM" scheme="http://newbilityvery.github.io/tags/DSM/"/>
    
      <category term="synology" scheme="http://newbilityvery.github.io/tags/synology/"/>
    
  </entry>
  
  <entry>
    <title>NAS硬件配置</title>
    <link href="http://newbilityvery.github.io/2016/07/06/nas-cfg/"/>
    <id>http://newbilityvery.github.io/2016/07/06/nas-cfg/</id>
    <published>2016-07-07T06:21:14.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<p>(<a href="/2016/07/06/nas-build/index.html">接上篇</a>)</p><h1 id="自己的想法"><a href="#自己的想法" class="headerlink" title="自己的想法"></a>自己的想法</h1><p>其实最初的定位应该就是文件服务器外加能跑虚拟机以便虚拟群晖。这样的话其实弄台Atom的板子就够了，而且功耗还很小。不过后来考虑到可能以后会兼一部分HTPC的功能，所以还是转向了桌面平台。</p><span id="more"></span><h2 id="机箱"><a href="#机箱" class="headerlink" title="机箱"></a>机箱</h2><p>这个是想了最久的，我想要一台尽量小的然后又能塞下4块3.5寸硬盘和至少一个2.5寸盘的，外观还不要太难看。说实在的，美国这些东西种类太匮乏了，价格也不算便宜，跟天朝没法比啊。<br>找来找去， 在美国能找到的型号里，考虑过下面一些：</p><h3 id="Lian-Li-Q25"><a href="#Lian-Li-Q25" class="headerlink" title="Lian Li Q25"></a>Lian Li Q25</h3><p><a href="http://www.lian-li.com/en/dt_portfolio/pc-q25/">这个机箱</a>其实设计得很不错，能放至少6块3.5寸盘。不过这样以来导致机箱偏大，对我来说有点多余了。我感觉我放4x8T（逐次添加）应该够用很久了。而且价格也不算便宜，不带电源120刀。</p><h3 id="U-NAS-NSC-400"><a href="#U-NAS-NSC-400" class="headerlink" title="U-NAS NSC-400"></a>U-NAS NSC-400</h3><p><a href="http://www.u-nas.com/xcart/product.php?productid=17610">这个</a>倒是够小，差点就买了。不过淘宝一搜发现是国产的。倒不是嫌弃这个，主要是发现国内才卖700块，美国要150刀，忒不爽了。（不过从民族大义来说，倒是比联想有良心。）</p><h3 id="IN-WIN-MS04"><a href="#IN-WIN-MS04" class="headerlink" title="IN WIN MS04"></a>IN WIN MS04</h3><p>最终选了<a href="http://www.in-win.com.tw/Server/zh/goods.php?act=view&id=IW-MS04">这个</a>。某天研究Gen8换主板可行性的时候无意中发现的。明显的仿Gen8设计，不过却是用mini-iTX板。这样就能用普通的主板了。有人说样子不好看，我感觉倒还行，而且这东西扔角落里也不会天天看。129刀含电源，感觉比上面两个都值。</p><h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><p>我这人就喜欢新东西，所以选择skylake平台。</p><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><p>开始想上i3，结果发现居然要100多刀！考虑再三，选择了奔腾G4400。好像能硬解4K，做HTPC应该够了吧。（最后会不会这么用都不知道呢。）无非就是没有超线程，好像也没哪里一定需要这个功能。</p><h3 id="主板"><a href="#主板" class="headerlink" title="主板"></a>主板</h3><p>其实没啥好说的，mini-iTX的板子就那么几个。开始考虑华擎的，但上面只有4个SATA口。算上PCIE转接板的钱还不如直接买个贵点的带6个SATA口的。还省下个pcie槽。</p><h3 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h3><p>不懂。看着打折买了个感觉算便宜的。</p><h3 id="SSD"><a href="#SSD" class="headerlink" title="SSD"></a>SSD</h3><p>本来想弄个MLC，不过发现现在市面上大多数都是TLC。MLC的价格升高了。所以也是看打折买了个三星的。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="数据盘"><a href="#数据盘" class="headerlink" title="数据盘"></a>数据盘</h3><p>还没买，等打折再看看吧。</p><h1 id="最终的配置"><a href="#最终的配置" class="headerlink" title="最终的配置"></a>最终的配置</h1><p>最终买的配置如下。数据盘还没买，因为想买8T的。一次性投资太大，先组起来挂NFS熟悉熟悉。</p><table><thead><tr><th>种类</th><th>型号</th><th>价格(w&#x2F; tax)</th></tr></thead><tbody><tr><td>主板</td><td>Gigabyte GA-H170N-WIFI</td><td>$123.11</td></tr><tr><td>CPU</td><td>Intel Pentium G4400</td><td>$64.79</td></tr><tr><td>内存</td><td>G.SKILL Ripjaws V Series (8Gx2)</td><td>$52.99</td></tr><tr><td>硬盘</td><td>Samsung Evo750 240G</td><td>$79.99</td></tr><tr><td>机箱</td><td>In Win MS04</td><td>$139.74</td></tr><tr><td>合计</td><td></td><td>$460.62</td></tr></tbody></table><p>其实算下来也不算很便宜。如果想省的话，主板和SSD都能省一些；内存可以配8G；还有可以考虑换上一代的平台。如果在天朝，机箱也有更便宜的。不过这也算是从头到尾完全自己配自己装的第一台PC了。平时对这些产品的价格还有品牌之间的一些特点都不是很了解，所以可能不是配得非常平衡。尤其是内存和硬盘，基本就是认价格和牌子的熟悉程度。现在想想SSD买得可能有点草率，不过即使现在也不知道应该买哪个。</p><h1 id="装机过程"><a href="#装机过程" class="headerlink" title="装机过程"></a>装机过程</h1><p>上一次装机还是10年前。不过隔了这么久发现其实过程也很简单，买来照插槽插就好了。没几根线所以走线什么的也算了。中间碰到了几个小问题。</p><h2 id="机箱风扇"><a href="#机箱风扇" class="headerlink" title="机箱风扇"></a>机箱风扇</h2><p>貌似MS04的机箱风扇不是和主板SYS FAN口兼容的，插上去不转。后来琢磨了半天，插背板的接口就能用了。查了说明书，针脚定义和CPU风扇的一样。</p><h2 id="主板SATA口"><a href="#主板SATA口" class="headerlink" title="主板SATA口"></a>主板SATA口</h2><p>应该是自己SB，插拔太暴力，把一个SATA口的塑料整个扒下来了。后面勉强装了回去，居然还能用。</p><h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><p><del>有时间放几张图吧。总之装好后就这么放角落里去了。</del></p><p><strong>Update 7&#x2F;26&#x2F;2016:</strong><br>数据盘也买了，随便照了几张。。。</p><p>WD Red 8TB，$320左右买的。今天一看又有新折扣，309刀，晕。</p><p><img src="http://ww4.sinaimg.cn/mw690/9feba6cdgw1f67vpi0s6ej21kw0w0tqv.jpg" alt="装好后的样子1"></p><!-- 图片链接放下面 --><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><p>下次再写点装系统装软件的过程。</p><!-- 链接放下面 -->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;(&lt;a href=&quot;/2016/07/06/nas-build/index.html&quot;&gt;接上篇&lt;/a&gt;)&lt;/p&gt;
&lt;h1 id=&quot;自己的想法&quot;&gt;&lt;a href=&quot;#自己的想法&quot; class=&quot;headerlink&quot; title=&quot;自己的想法&quot;&gt;&lt;/a&gt;自己的想法&lt;/h1&gt;&lt;p&gt;其实最初的定位应该就是文件服务器外加能跑虚拟机以便虚拟群晖。这样的话其实弄台Atom的板子就够了，而且功耗还很小。不过后来考虑到可能以后会兼一部分HTPC的功能，所以还是转向了桌面平台。&lt;/p&gt;
    
    </summary>
    
    
      <category term="NAS" scheme="http://newbilityvery.github.io/tags/NAS/"/>
    
      <category term="DIY" scheme="http://newbilityvery.github.io/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>想组个NAS</title>
    <link href="http://newbilityvery.github.io/2016/07/06/nas-build/"/>
    <id>http://newbilityvery.github.io/2016/07/06/nas-build/</id>
    <published>2016-07-06T19:00:10.000Z</published>
    <updated>2023-01-07T06:26:44.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>2012年买了一个4TB的WD Mybook Live Duo, 一个入门级的NAS. 从此开启了一发不可收拾的NAS折腾。起初是开启ssh模式，hack进去装各种软件，比如aria2. 可惜那时候Linux水平太次，折腾了几次把系统都搞乱了，还好没崩溃。</p><p>后来不敢乱弄了，因为我开的是Raid0模式，怕数据弄丢。于是买了个树莓派挂上NFS管理。越用越发现这个方法不错，数据和系统分开，可以随便折腾。在上面装了aria2，最常用的就是配合<a href="https://github.com/acgotaku/BaiduExporter">百度云插件</a>下载：先利用百度云的离线功能抓到云端，再利用插件导出到aria2。这样速度基本能达到2MB&#x2F;s。可惜在百度的压力下最近这个插件停止更新了，希望有大神能接棒。</p><p>最近这4T硬盘终于快被塞满了。于是一颗心不免开始躁动起来，酝酿着升级下。</p><span id="more"></span><h1 id="硬件方案"><a href="#硬件方案" class="headerlink" title="硬件方案"></a>硬件方案</h1><p>前前后后研究了大半年，考虑过以下几种方案：</p><ol><li>HP Gen8 等半成品</li><li>群晖，QNAP等成品</li><li>自己攒</li></ol><h2 id="半成品"><a href="#半成品" class="headerlink" title="半成品"></a>半成品</h2><p>看到<a href="http://www8.hp.com/us/en/products/proliant-servers/product-detail.html?oid=5379860">HP Gen8</a>的外观时真是眼前一亮。无论做工还是功能都让我心动过好一阵子。美国亚马逊卖$400+，德国亚马逊算下来才$300多。差点就心头一热下单了。不过仔细考虑考虑发现还是有缺点的。</p><ul><li>主板定制，升级基本不可能。坏了也不好买。</li><li>便宜的型号CPU太低端。</li><li>自带内存太小。而ECC内存价格偏高。</li><li>还有些其他在论坛上看到的。比如STAT5没法启动等小问题。</li></ul><p>总之，虽然看起来价格不错。不过想要得到过得去，好折腾的配置还要投入不少钱；并且折腾也少不了。</p><h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><p>市场上比较火的成品NAS比如群晖，QNAP。好处是软件功能丰富，买来即插即用。不过：</p><ul><li>价格偏高。这个能理解，厂商开发软件也是要成本的嘛。</li><li>硬件多数是定制，升级不方便。</li></ul><h2 id="DIY"><a href="#DIY" class="headerlink" title="DIY"></a>DIY</h2><p>最后选了DIY方案。首先好处有：</p><ul><li>所有硬件完全可以根据自己的需求选择。</li><li>价格比上面的两个方案都便宜。</li><li>不仅硬件，连软件和系统都能自己选。</li></ul><p>当然也不是没有缺点的：</p><ul><li>没技术支持。这个没啥关系。买了那么多电子产品除了质量问题基本没问过技术支持，都是上网搜索自己解决的。</li><li>没上面两种方案的产品美观。找个合适的机箱花了我不少时间，后面会提到。</li></ul><h1 id="软件方案"><a href="#软件方案" class="headerlink" title="软件方案"></a>软件方案</h1><p>硬件定下了剩下的就是软件了。也考虑过几种方案：</p><ol><li>直接黑群晖</li><li>主系统＋虚拟黑群晖</li></ol><h2 id="黑群晖"><a href="#黑群晖" class="headerlink" title="黑群晖"></a>黑群晖</h2><p>其实唯一看上黑群晖的就是他的Photo Station功能。目前我没发现有什么免费的软件能替代它。毕竟下电影或其他的事情我可以做，但是照片管理却是全家人都要参与的。之前就是简单的SMB共享，管理和上传下载都不方便，即使是局域网里查看都感觉慢。</p><p>不过黑群晖做主系统还是很快被自己否决了。主要还是不稳定，作为主系统太危险了。这样做还不如直接买台群晖省心。</p><h2 id="主系统"><a href="#主系统" class="headerlink" title="主系统"></a>主系统</h2><p>网上一般也就是</p><ul><li>Windows based</li><li>Linux based</li><li>FreeNAS等以freeBSD为基础的系统</li></ul><p>Windows&#x2F;Windows server基本不考虑。从来没用过它做server。。。</p><p>FreeNAS装在虚拟机上试了下，感觉freeBSD和linux区别还是有一些的。很多操作都和linux不一样。而且里面那个Jail虚拟机貌似还挺折腾。所以也只好作罢。</p><p>剩下就是linux了，既免费，又比较熟悉。开始想着装个Ubuntu server算了，不过中间发现了<a href="http://www.openmediavault.org/">OpenMediaVault</a>这个NAS系统。好像是原FreeNAS的成员创建的。于是也在虚拟机上装起来试了一下，感觉还不错。同样有web GUI，还是基于debian。用起来熟悉得多，里面的虚拟机插件也很容易使用。</p><p>所以，基本就定下来用OMV ＋ 虚拟机黑群晖了。照片文件夹用NFS挂载到群晖里用Photo Station管理。</p><p>（接下来准备写写硬件配置，还有软件安装等。看看什么时候有时间了。）</p><!-- 参考链接 -->]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;2012年买了一个4TB的WD Mybook Live Duo, 一个入门级的NAS. 从此开启了一发不可收拾的NAS折腾。起初是开启ssh模式，hack进去装各种软件，比如aria2. 可惜那时候Linux水平太次，折腾了几次把系统都搞乱了，还好没崩溃。&lt;/p&gt;
&lt;p&gt;后来不敢乱弄了，因为我开的是Raid0模式，怕数据弄丢。于是买了个树莓派挂上NFS管理。越用越发现这个方法不错，数据和系统分开，可以随便折腾。在上面装了aria2，最常用的就是配合&lt;a href=&quot;https://github.com/acgotaku/BaiduExporter&quot;&gt;百度云插件&lt;/a&gt;下载：先利用百度云的离线功能抓到云端，再利用插件导出到aria2。这样速度基本能达到2MB&amp;#x2F;s。可惜在百度的压力下最近这个插件停止更新了，希望有大神能接棒。&lt;/p&gt;
&lt;p&gt;最近这4T硬盘终于快被塞满了。于是一颗心不免开始躁动起来，酝酿着升级下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="NAS" scheme="http://newbilityvery.github.io/tags/NAS/"/>
    
      <category term="PC" scheme="http://newbilityvery.github.io/tags/PC/"/>
    
  </entry>
  
</feed>
